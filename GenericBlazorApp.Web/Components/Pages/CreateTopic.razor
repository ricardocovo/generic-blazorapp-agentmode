@page "/create-topic"
@using GenericBlazorApp.Web.Models
@using System.ComponentModel.DataAnnotations

<MudContainer>
    <MudText Typo="Typo.h3" GutterBottom="true">Create a New Topic</MudText>
    
    <MudPaper Class="pa-4 ma-2" Elevation="2">
        <EditForm Model="@topic" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="topic.Summary" 
                                  Label="Summary" 
                                  Variant="Variant.Outlined" 
                                  MaxLength="128"
                                  Required="true"
                                  For="@(() => topic.Summary)" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudTextField @bind-Value="topic.Description" 
                                  Label="Description" 
                                  Variant="Variant.Outlined" 
                                  Lines="3"
                                  Required="true"
                                  For="@(() => topic.Description)" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudDatePicker @bind-Date="topic.TargetDate" 
                                   Label="Target Date" 
                                   Variant="Variant.Outlined" 
                                   Required="true"
                                   For="@(() => topic.TargetDate)" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudButton ButtonType="ButtonType.Submit" 
                               Variant="Variant.Filled" 
                               Color="Color.Primary" 
                               Class="mr-2">
                        Create Topic
                    </MudButton>
                    <MudButton Variant="Variant.Outlined" 
                               Color="Color.Secondary" 
                               OnClick="@Cancel">
                        Cancel
                    </MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
    </MudPaper>

    @if (showSuccessMessage)
    {
        <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => showSuccessMessage = false)">
            Topic created successfully!
        </MudAlert>
    }
</MudContainer>

@code {
    private Topic topic = new Topic();
    private bool showSuccessMessage = false;

    [Inject] NavigationManager Navigation { get; set; } = default!;

    private async Task HandleValidSubmit()
    {
        // Here you would typically save to a database
        // For now, we'll just show a success message and reset the form
        showSuccessMessage = true;
        topic = new Topic();
        
        // Hide the success message after 3 seconds
        await Task.Delay(3000);
        showSuccessMessage = false;
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }
}